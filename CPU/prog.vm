PUSH CONSTANT 0
POP REGISTER 0

CALL main
JUMP UN END

LABEL output
POP OUT 1
RETURN

LABEL input
PUSH IN 1
RETURN

LABEL sqrt
SQRT
RETURN


LABEL main
; CALL preporation
PUSH REGISTER 0
PUSH CONSTANT 0
ADD
POP REGISTER 0
; -----------------
CALL two
; CALL restoration
PUSH CONSTANT 0
PUSH REGISTER 0
SUB
POP REGISTER 0
; -----------------
; End of function return
RETURN


LABEL one
; CALL preporation
PUSH REGISTER 0
PUSH CONSTANT 6
ADD
POP REGISTER 0
; -----------------
CALL input
; CALL restoration
PUSH CONSTANT 6
PUSH REGISTER 0
SUB
POP REGISTER 0
; -----------------
PUSH CONSTANT 0
PUSH REGISTER 0
ADD
POP LOCAL INDEX
; CALL preporation
PUSH REGISTER 0
PUSH CONSTANT 6
ADD
POP REGISTER 0
; -----------------
CALL input
; CALL restoration
PUSH CONSTANT 6
PUSH REGISTER 0
SUB
POP REGISTER 0
; -----------------
PUSH CONSTANT 1
PUSH REGISTER 0
ADD
POP LOCAL INDEX
; CALL preporation
PUSH REGISTER 0
PUSH CONSTANT 6
ADD
POP REGISTER 0
; -----------------
CALL input
; CALL restoration
PUSH CONSTANT 6
PUSH REGISTER 0
SUB
POP REGISTER 0
; -----------------
PUSH CONSTANT 2
PUSH REGISTER 0
ADD
POP LOCAL INDEX
PUSH CONSTANT 0
PUSH REGISTER 0
ADD
PUSH LOCAL INDEX
PUSH CONSTANT 1
PUSH REGISTER 0
ADD
PUSH LOCAL INDEX
PUSH CONSTANT 2
PUSH REGISTER 0
ADD
PUSH LOCAL INDEX
; CALL preporation
PUSH REGISTER 0
PUSH CONSTANT 6
ADD
POP REGISTER 0
; -----------------
CALL squareSolver
; CALL restoration
PUSH CONSTANT 6
PUSH REGISTER 0
SUB
POP REGISTER 0
; -----------------
PUSH CONSTANT 5
PUSH REGISTER 0
ADD
POP LOCAL INDEX
PUSH CONSTANT 4
PUSH REGISTER 0
ADD
POP LOCAL INDEX
PUSH CONSTANT 3
PUSH REGISTER 0
ADD
POP LOCAL INDEX
PUSH CONSTANT 3
PUSH REGISTER 0
ADD
PUSH LOCAL INDEX
; CALL preporation
PUSH REGISTER 0
PUSH CONSTANT 6
ADD
POP REGISTER 0
; -----------------
CALL output
; CALL restoration
PUSH CONSTANT 6
PUSH REGISTER 0
SUB
POP REGISTER 0
; -----------------
PUSH CONSTANT 4
PUSH REGISTER 0
ADD
PUSH LOCAL INDEX
; CALL preporation
PUSH REGISTER 0
PUSH CONSTANT 6
ADD
POP REGISTER 0
; -----------------
CALL output
; CALL restoration
PUSH CONSTANT 6
PUSH REGISTER 0
SUB
POP REGISTER 0
; -----------------
PUSH CONSTANT 5
PUSH REGISTER 0
ADD
PUSH LOCAL INDEX
; CALL preporation
PUSH REGISTER 0
PUSH CONSTANT 6
ADD
POP REGISTER 0
; -----------------
CALL output
; CALL restoration
PUSH CONSTANT 6
PUSH REGISTER 0
SUB
POP REGISTER 0
; -----------------
; End of function return
RETURN


LABEL two
; CALL preporation
PUSH REGISTER 0
PUSH CONSTANT 1
ADD
POP REGISTER 0
; -----------------
CALL input
; CALL restoration
PUSH CONSTANT 1
PUSH REGISTER 0
SUB
POP REGISTER 0
; -----------------
PUSH CONSTANT 0
PUSH REGISTER 0
ADD
POP LOCAL INDEX
PUSH CONSTANT 0
PUSH REGISTER 0
ADD
PUSH LOCAL INDEX
; CALL preporation
PUSH REGISTER 0
PUSH CONSTANT 1
ADD
POP REGISTER 0
; -----------------
CALL fact
; CALL restoration
PUSH CONSTANT 1
PUSH REGISTER 0
SUB
POP REGISTER 0
; -----------------
PUSH CONSTANT 0
PUSH REGISTER 0
ADD
POP LOCAL INDEX
PUSH CONSTANT 0
PUSH REGISTER 0
ADD
PUSH LOCAL INDEX
; CALL preporation
PUSH REGISTER 0
PUSH CONSTANT 1
ADD
POP REGISTER 0
; -----------------
CALL output
; CALL restoration
PUSH CONSTANT 1
PUSH REGISTER 0
SUB
POP REGISTER 0
; -----------------
; End of function return
RETURN


LABEL linearSolver
; arg - b
PUSH CONSTANT 1
PUSH REGISTER 0
ADD
POP LOCAL INDEX
; ---------
; arg - a
PUSH CONSTANT 0
PUSH REGISTER 0
ADD
POP LOCAL INDEX
; ---------
; BOOLEXPR
PUSH CONSTANT 0
PUSH CONSTANT 0
PUSH REGISTER 0
ADD
PUSH LOCAL INDEX
SUB
;-------------
JUMP EQ IF0
PUSH CONSTANT 1
PUSH CONSTANT 2
PUSH REGISTER 0
ADD
POP LOCAL INDEX
PUSH CONSTANT 0
PUSH REGISTER 0
ADD
PUSH LOCAL INDEX
PUSH CONSTANT 1
PUSH REGISTER 0
ADD
PUSH LOCAL INDEX
PUSH CONSTANT 0
SUB
DIV
PUSH CONSTANT 3
PUSH REGISTER 0
ADD
POP LOCAL INDEX
JUMP UN ENDIF0
LABEL IF0
; BOOLEXPR
PUSH CONSTANT 0
PUSH CONSTANT 1
PUSH REGISTER 0
ADD
PUSH LOCAL INDEX
SUB
;-------------
JUMP EQ IF1
PUSH CONSTANT 0
PUSH CONSTANT 2
PUSH REGISTER 0
ADD
POP LOCAL INDEX
PUSH CONSTANT 0
PUSH CONSTANT 3
PUSH REGISTER 0
ADD
POP LOCAL INDEX
JUMP UN ENDIF1
LABEL IF1
PUSH CONSTANT -1
PUSH CONSTANT 2
PUSH REGISTER 0
ADD
POP LOCAL INDEX
PUSH CONSTANT 0
PUSH CONSTANT 3
PUSH REGISTER 0
ADD
POP LOCAL INDEX
LABEL ENDIF1
LABEL ENDIF0
; RETSTATEMENT
PUSH CONSTANT 2
PUSH REGISTER 0
ADD
PUSH LOCAL INDEX
PUSH CONSTANT 3
PUSH REGISTER 0
ADD
PUSH LOCAL INDEX
RETURN
; End of function return
RETURN


LABEL fact
; arg - n
PUSH CONSTANT 0
PUSH REGISTER 0
ADD
POP LOCAL INDEX
; ---------
; BOOLEXPR
PUSH CONSTANT 0
PUSH CONSTANT 0
PUSH REGISTER 0
ADD
PUSH LOCAL INDEX
SUB
;-------------
JUMP EQ IF2
JUMP UN ENDIF2
LABEL IF2
; RETSTATEMENT
PUSH CONSTANT 1
RETURN
LABEL ENDIF2
PUSH CONSTANT 1
PUSH CONSTANT 0
PUSH REGISTER 0
ADD
PUSH LOCAL INDEX
SUB
; CALL preporation
PUSH REGISTER 0
PUSH CONSTANT 2
ADD
POP REGISTER 0
; -----------------
CALL fact
; CALL restoration
PUSH CONSTANT 2
PUSH REGISTER 0
SUB
POP REGISTER 0
; -----------------
PUSH CONSTANT 1
PUSH REGISTER 0
ADD
POP LOCAL INDEX
; RETSTATEMENT
PUSH CONSTANT 0
PUSH REGISTER 0
ADD
PUSH LOCAL INDEX
PUSH CONSTANT 1
PUSH REGISTER 0
ADD
PUSH LOCAL INDEX
MUL
RETURN
; End of function return
RETURN


LABEL squareSolver
; arg - c
PUSH CONSTANT 2
PUSH REGISTER 0
ADD
POP LOCAL INDEX
; ---------
; arg - b
PUSH CONSTANT 1
PUSH REGISTER 0
ADD
POP LOCAL INDEX
; ---------
; arg - a
PUSH CONSTANT 0
PUSH REGISTER 0
ADD
POP LOCAL INDEX
; ---------
; BOOLEXPR
PUSH CONSTANT 0
PUSH CONSTANT 0
PUSH REGISTER 0
ADD
PUSH LOCAL INDEX
SUB
;-------------
JUMP EQ IF3
JUMP UN ENDIF3
LABEL IF3
PUSH CONSTANT 1
PUSH REGISTER 0
ADD
PUSH LOCAL INDEX
PUSH CONSTANT 2
PUSH REGISTER 0
ADD
PUSH LOCAL INDEX
; CALL preporation
PUSH REGISTER 0
PUSH CONSTANT 8
ADD
POP REGISTER 0
; -----------------
CALL linearSolver
; CALL restoration
PUSH CONSTANT 8
PUSH REGISTER 0
SUB
POP REGISTER 0
; -----------------
PUSH CONSTANT 4
PUSH REGISTER 0
ADD
POP LOCAL INDEX
PUSH CONSTANT 3
PUSH REGISTER 0
ADD
POP LOCAL INDEX
; RETSTATEMENT
PUSH CONSTANT 3
PUSH REGISTER 0
ADD
PUSH LOCAL INDEX
PUSH CONSTANT 4
PUSH REGISTER 0
ADD
PUSH LOCAL INDEX
PUSH CONSTANT 0
RETURN
LABEL ENDIF3
PUSH CONSTANT 4
PUSH CONSTANT 0
PUSH REGISTER 0
ADD
PUSH LOCAL INDEX
MUL
PUSH CONSTANT 2
PUSH REGISTER 0
ADD
PUSH LOCAL INDEX
MUL
PUSH CONSTANT 1
PUSH REGISTER 0
ADD
PUSH LOCAL INDEX
PUSH CONSTANT 1
PUSH REGISTER 0
ADD
PUSH LOCAL INDEX
MUL
SUB
PUSH CONSTANT 6
PUSH REGISTER 0
ADD
POP LOCAL INDEX
; BOOLEXPR
PUSH CONSTANT 6
PUSH REGISTER 0
ADD
PUSH LOCAL INDEX
PUSH CONSTANT 0
SUB
;-------------
JUMP GT IF4
JUMP UN ENDIF4
LABEL IF4
; RETSTATEMENT
PUSH CONSTANT 0
PUSH CONSTANT 0
PUSH CONSTANT 0
RETURN
LABEL ENDIF4
; BOOLEXPR
PUSH CONSTANT 0
PUSH CONSTANT 6
PUSH REGISTER 0
ADD
PUSH LOCAL INDEX
SUB
;-------------
JUMP EQ IF5
JUMP UN ENDIF5
LABEL IF5
; RETSTATEMENT
PUSH CONSTANT 1
PUSH CONSTANT 2
PUSH CONSTANT 0
PUSH REGISTER 0
ADD
PUSH LOCAL INDEX
MUL
PUSH CONSTANT 1
PUSH REGISTER 0
ADD
PUSH LOCAL INDEX
PUSH CONSTANT 0
SUB
DIV
PUSH CONSTANT 0
RETURN
LABEL ENDIF5
PUSH CONSTANT 6
PUSH REGISTER 0
ADD
PUSH LOCAL INDEX
; CALL preporation
PUSH REGISTER 0
PUSH CONSTANT 8
ADD
POP REGISTER 0
; -----------------
CALL sqrt
; CALL restoration
PUSH CONSTANT 8
PUSH REGISTER 0
SUB
POP REGISTER 0
; -----------------
PUSH CONSTANT 7
PUSH REGISTER 0
ADD
POP LOCAL INDEX
; RETSTATEMENT
PUSH CONSTANT 2
PUSH CONSTANT 2
PUSH CONSTANT 0
PUSH REGISTER 0
ADD
PUSH LOCAL INDEX
MUL
PUSH CONSTANT 1
PUSH REGISTER 0
ADD
PUSH LOCAL INDEX
PUSH CONSTANT 0
SUB
PUSH CONSTANT 7
PUSH REGISTER 0
ADD
PUSH LOCAL INDEX
ADD
DIV
PUSH CONSTANT 2
PUSH CONSTANT 0
PUSH REGISTER 0
ADD
PUSH LOCAL INDEX
MUL
PUSH CONSTANT 7
PUSH REGISTER 0
ADD
PUSH LOCAL INDEX
PUSH CONSTANT 1
PUSH REGISTER 0
ADD
PUSH LOCAL INDEX
PUSH CONSTANT 0
SUB
SUB
DIV
RETURN
; End of function return
RETURN


LABEL END
